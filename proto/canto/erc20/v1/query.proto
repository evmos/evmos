syntax = "proto3";
package canto.erc20.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "canto/erc20/v1/genesis.proto";
import "canto/erc20/v1/erc20.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/Canto-Network/canto/v3/x/erc20/types";

// Query defines the gRPC querier service.
service Query {
  // Retrieves registered token pairs
  rpc TokenPairs(QueryTokenPairsRequest) returns (QueryTokenPairsResponse) {
    option (google.api.http).get = "/canto/erc20/v1/token_pairs";
  }

  // Retrieves a registered token pair
  rpc TokenPair(QueryTokenPairRequest) returns (QueryTokenPairResponse) {
    option (google.api.http).get = "/canto/erc20/v1/token_pairs/{token}";
  }

  // Params retrieves the erc20 module params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/canto/erc20/v1/params";
  }
}

// QueryTokenPairsRequest is the request type for the Query/TokenPairs RPC
// method.
message QueryTokenPairsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryTokenPairsResponse is the response type for the Query/TokenPairs RPC
// method.
message QueryTokenPairsResponse {
  repeated TokenPair token_pairs = 1 [ (gogoproto.nullable) = false ];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryTokenPairRequest is the request type for the Query/TokenPair RPC method.
message QueryTokenPairRequest {
  // token identifier can be either the hex contract address of the ERC20 or the
  // Cosmos base denomination
  string token = 1;
}

// QueryTokenPairResponse is the response type for the Query/TokenPair RPC
// method.
message QueryTokenPairResponse {
  TokenPair token_pair = 1 [ (gogoproto.nullable) = false ];
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC
// method.
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

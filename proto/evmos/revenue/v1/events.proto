syntax = "proto3";
package evmos.revenue.v1;

option go_package = "github.com/evmos/evmos/v11/x/revenue/types";

// EventRegisterRevenue is an event emitted when a contract is registered to receive a percentage of tx fees.
message EventRegisterRevenue {
  // deployer_address is the bech32 address of message sender. It must be the same as the origin EOA
  // sending the transaction which deploys the contract
  string deployer_address = 1;
  // contract_address in hex format
  string contract_address = 2;
  // effective_withdrawer is the withdrawer address that is stored after the
  // revenue registration is completed. It defaults to the deployer address if
  // the withdrawer address in the msg is omitted. When omitted, the withdraw map
  // doesn't need to be set.
  string effective_withdrawer = 3;
}

// EventUpdateRevenue is an event emitted when a withdrawer address is updated for a contract.
message EventUpdateRevenue {
  // contract_address in hex format
  string contract_address = 1;
  // deployer_address is the bech32 address of message sender. It must be the same as the origin EOA
  // sending the transaction which deploys the contract
  string deployer_address = 2;
  // withdrawer_address is the bech32 address of account receiving the transaction fees
  string withdrawer_address = 3;
}

// EventCancelRevenue is an event emitted when a contract is unregistered from receiving tx fees.
message EventCancelRevenue {
  // deployer_address is the bech32 address of message sender. It must be the same as the origin EOA
  // sending the transaction which deploys the contract
  string deployer_address = 1;
  // contract_address in hex format
  string contract_address = 2;
}

// EventDistributeRevenue is an event emitted when a contract receives a percentage of tx fees.
message EventDistributeRevenue {
  // sender is the address of message sender.
  string sender = 1;
  // contract address in hex format
  string contract = 2;
  // withdrawer_address is the bech32 address of account receiving the transaction fees
  string withdrawer_address = 3;
  // amount of revenue distributed
  string amount = 4;
}

syntax = "proto3";
package evmos.incentives.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
option go_package = "github.com/evmos/evmos/v10/x/incentives/types";

// Incentive defines an instance that organizes distribution conditions for a
// given smart contract
message Incentive {
  // contract address of the smart contract to be incentivized
  string contract = 1;
  // allocations is a slice of denoms and percentages of rewards to be allocated
  repeated cosmos.base.v1beta1.DecCoin allocations = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
  // epochs defines the number of remaining epochs for the incentive
  uint32 epochs = 3;
  // start_time of the incentive distribution
  google.protobuf.Timestamp start_time = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  // total_gas is the cumulative gas spent by all gas meters of the incentive during the epoch
  uint64 total_gas = 5;
}
// GasMeter tracks the cumulative gas spent per participant in one epoch
message GasMeter {
  // contract is the hex address of the incentivized smart contract
  string contract = 1;
  // participant address that interacts with the incentive
  string participant = 2;
  // cumulative_gas spent during the epoch
  uint64 cumulative_gas = 3;
}

// RegisterIncentiveProposal is a gov Content type to register an incentive
message RegisterIncentiveProposal {
  option (gogoproto.equal) = false;
  // title of the proposal
  string title = 1;
  // description of the proposal
  string description = 2;
  // contract address to be registered
  string contract = 3;
  // allocations defines the denoms and percentage of rewards to be allocated
  repeated cosmos.base.v1beta1.DecCoin allocations = 4
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
  // epochs is the number of remaining epochs for the incentive
  uint32 epochs = 5;
}

// CancelIncentiveProposal is a gov Content type to cancel an incentive
message CancelIncentiveProposal {
  option (gogoproto.equal) = false;
  // title of the proposal
  string title = 1;
  // description of the proposal
  string description = 2;
  // contract address of the incentivized smart contract
  string contract = 3;
}
syntax = "proto3";
package evmos.inflation.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

import "evmos/inflation/v1/inflation.proto";

option go_package = "github.com/tharsis/evmos/x/inflation/types";

// GenesisState defines the inflation module's genesis state.
message GenesisState {
  // minter is a space for holding current rewards information.
  Minter minter = 1 [ (gogoproto.nullable) = false ];
  // params defines all the paramaters of the module.
  Params params = 2 [ (gogoproto.nullable) = false ];
  // current halven period start epoch
  int64 halven_started_epoch = 3;
}

// Params holds parameters for the inflation module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  // type of coin to mint
  string mint_denom = 1;
  // epoch provisions from the first epoch
  string genesis_epoch_provisions = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // inflation epoch identifier
  string epoch_identifier = 3;
  // number of epochs take to reduce rewards
  int64 reduction_period_in_epochs = 4;
  // reduction multiplier to execute on each period
  string reduction_factor = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // inflation_distribution defines the distribution of the minted denom
  InflationDistribution inflation_distribution = 6 [
    (gogoproto.nullable) = false
  ];
  // coin to allocate from team vesting supply
  cosmos.base.v1beta1.Coin team_vesting_provision = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  // aaddress to receive the team allocation from the inflation distribution
  string team_address = 8;
  // start epoch to distribute minting rewards
  int64 minting_rewards_allocation_start_epoch = 9;
}
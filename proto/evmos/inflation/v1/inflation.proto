syntax = "proto3";
package evmos.inflation.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/tharsis/evmos/x/inflation/types";

// Minter represents the minting state
message Minter {
  // current epoch provisions
  string epoch_provisions = 1 [
    (gogoproto.moretags) = "yaml:\"epoch_provisions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message WeightedAddress {
  string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
  string weight = 2 [
    (gogoproto.moretags) = "yaml:\"weight\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// AllocationProportions defines the proportions in which inflation is allocated
message AllocationProportions {
  // staking_rewards defines the proportion of the minted minted_denom that is
  // to be allocated as staking rewards
  string staking_rewards = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // team_vesting defines the proportion of the minted minted_denom that is to
  // be allocated to the team vesting address
  string team_vesting = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // usage_incentives defines the proportion of the minted minted_denom that is
  // to be allocated to the incentives module address
  string usage_incentives = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // community_pool defines the proportion of the minted minted_denom that is to
  // be allocated to the community pool
  string community_pool = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// Params holds parameters for the inflation module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  // type of coin to mint
  string mint_denom = 1;
  // epoch provisions from the first epoch
  string genesis_epoch_provisions = 2 [
    (gogoproto.moretags) = "yaml:\"genesis_epoch_provisions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // mint epoch identifier
  string epoch_identifier = 3
      [ (gogoproto.moretags) = "yaml:\"epoch_identifier\"" ];
  // number of epochs take to reduce rewards
  int64 reduction_period_in_epochs = 4
      [ (gogoproto.moretags) = "yaml:\"reduction_period_in_epochs\"" ];
  // reduction multiplier to execute on each period
  string reduction_factor = 5 [
    (gogoproto.moretags) = "yaml:\"reduction_factor\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // allocation_proportions defines the proportion of the minted denom
  AllocationProportions allocation_proportions = 6
      [ (gogoproto.nullable) = false ];
  // address to receive developer rewards
  repeated WeightedAddress weighted_developer_rewards_receivers = 7 [
    (gogoproto.moretags) = "yaml:\"developer_rewards_receiver\"",
    (gogoproto.nullable) = false
  ];
  // start epoch to distribute minting rewards
  int64 minting_rewards_allocation_start_epoch = 8
      [ (gogoproto.moretags) =
            "yaml:\"minting_rewards_allocation_start_epoch\"" ];
}

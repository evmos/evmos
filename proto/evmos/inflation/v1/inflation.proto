syntax = "proto3";
package evmos.inflation.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/tharsis/evmos/x/inflation/types";

// Minter represents the minting state
message Minter {
  // current epoch provisions
  string epoch_provisions = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// AllocationProportions defines the proportions in which inflation is allocated
message AllocationProportions {
  // staking_rewards defines the proportion of the minted minted_denom that is
  // to be allocated as staking rewards
  string staking_rewards = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // team_vesting defines the proportion of the minted minted_denom that is to
  // be allocated to the team vesting address
  string team_vesting = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // usage_incentives defines the proportion of the minted minted_denom that is
  // to be allocated to the incentives module address
  string usage_incentives = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // community_pool defines the proportion of the minted minted_denom that is to
  // be allocated to the community pool
  string community_pool = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

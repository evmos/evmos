syntax = "proto3";
package evmos.fees.v1;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/evmos/evmos/v6/x/fees/types";

// Msg defines the fees Msg service.
service Msg {
  // RegisterFee registers a new contract for receiving transaction fees
  rpc RegisterFee(MsgRegisterFee) returns (MsgRegisterFeeResponse) {
    option (google.api.http).post = "/evmos/fees/v1/tx/register_fee";
  };
  // CancelFee cancels a contract's fee registration and further receival of
  // transaction fees
  rpc CancelFee(MsgCancelFee) returns (MsgCancelFeeResponse) {
    option (google.api.http).post = "/evmos/fees/v1/tx/cancel_fee";
  };
  // UpdateFee updates the withdraw address
  rpc UpdateFee(MsgUpdateFee) returns (MsgUpdateFeeResponse) {
    option (google.api.http).post = "/evmos/fees/v1/tx/update_fee";
  };
}

// MsgRegisterFee defines a message that registers a Fee
message MsgRegisterFee {
  option (gogoproto.equal) = false;
  // contract hex address
  string contract_address = 1;
  // bech32 address of message sender, must be the same as the origin EOA
  // sending the transaction which deploys the contract
  string deployer_address = 2;
  // bech32 address of account receiving the transaction fees
  string withdraw_address = 3;
  // array of nonces from the address path, where the last nonce is
  // the nonce that determines the contract's address - it can be an EOA nonce
  // or a factory contract nonce
  repeated uint64 nonces = 4;
}

// MsgRegisterFeeResponse defines the MsgRegisterFee response type
message MsgRegisterFeeResponse {}

// MsgCancelFee defines a message that cancels a registered a Fee
message MsgCancelFee {
  option (gogoproto.equal) = false;
  // contract hex address
  string contract_address = 1;
  // deployer bech32 address
  string deployer_address = 2;
}

// MsgCancelFeeResponse defines the MsgCancelFee response type
message MsgCancelFeeResponse {}

// MsgUpdateFee defines a message that updates the withdraw address for a
// registered Fee
message MsgUpdateFee {
  option (gogoproto.equal) = false;
  // contract hex address
  string contract_address = 1;
  // deployer bech32 address
  string deployer_address = 2;
  // new withdraw bech32 address for receiving the transaction fees
  string withdraw_address = 3;
}

// MsgUpdateFeeResponse defines the MsgUpdateFee response type
message MsgUpdateFeeResponse {}

syntax = "proto3";
package evmos.fees.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "evmos/fees/v1/genesis.proto";
import "evmos/fees/v1/fees.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/tharsis/evmos/v3/x/fees/types";

// Query defines the gRPC querier service.
service Query {
  // FeeContracts retrieves registered fees
  rpc FeeContracts(QueryFeeContractsRequest)
      returns (QueryFeeContractsResponse) {
    option (google.api.http).get = "/evmos/fees/v1/fees";
  }

  // FeeContract retrieves a registered fee
  rpc FeeContract(QueryFeeContractRequest)
      returns (QueryFeeContractResponse) {
    option (google.api.http).get = "/evmos/fees/v1/fees/{contract_address}";
  }

  // Params retrieves the fees module params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/evmos/fees/v1/params";
  }
}

// QueryFeeContractsRequest is the request type for the Query/FeeContracts RPC
// method.
message QueryFeeContractsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryFeeContractsResponse is the response type for the Query/FeeContracts
// RPC method.
message QueryFeeContractsResponse {
  repeated FeeContract fees = 1 [ (gogoproto.nullable) = false ];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryFeeContractRequest is the request type for the Query/FeeContract RPC
// method.
message QueryFeeContractRequest {
  // contract identifier is the hex contract address of a contract
  string contract_address = 1;
}

// QueryFeeContractResponse is the response type for the Query/FeeContract RPC
// method.
message QueryFeeContractResponse {
  FeeContract fees = 1 [ (gogoproto.nullable) = false ];
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC
// method.
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

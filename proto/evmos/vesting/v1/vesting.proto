syntax = "proto3";
package evmos.vesting.v1;

import "gogoproto/gogo.proto";

import "cosmos/vesting/v1beta1/vesting.proto";

option go_package = "github.com/tharsis/evmos/x/vesting/types";

// ClawbackVestingAccount implements the VestingAccount interface. It provides
// an account that can hold contributions subject to "lockup" (like a
// PeriodicVestingAccount), or vesting which is subject to clawback
// of unvested tokens, or a combination (tokens vest, but are still locked).
message ClawbackVestingAccount {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [
    (gogoproto.embed) = true
  ];
  // funder_address specifies the account which can perform clawback.
  string funder_address = 2 [
    (gogoproto.moretags) = "yaml:\"funder_address\""
  ];
  int64 start_time = 3 [
    (gogoproto.moretags) = "yaml:\"start_time\""
  ];
  // unlocking schedule relative to the BaseVestingAccount start_time.
  repeated cosmos.vesting.v1beta1.Period lockup_periods = 4 [
    (gogoproto.moretags) = "yaml:\"lockup_periods\"",
    (gogoproto.nullable) = false
  ];
  // vesting (i.e. immunity from clawback) schedule relative to the BaseVestingAccount start_time.
  repeated cosmos.vesting.v1beta1.Period vesting_periods = 5 [
    (gogoproto.moretags) = "yaml:\"vesting_periods\"",
    (gogoproto.nullable) = false
  ];
}

// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	paramstypes "github.com/cosmos/cosmos-sdk/x/params/types"
	mock "github.com/stretchr/testify/mock"

	types "github.com/cosmos/cosmos-sdk/types"
)

// Subspace is an autogenerated mock type for the Subspace type
type Subspace struct {
	mock.Mock
}

// GetParamSetIfExists provides a mock function with given fields: ctx, ps
func (_m *Subspace) GetParamSetIfExists(ctx types.Context, ps paramstypes.ParamSet) {
	_m.Called(ctx, ps)
}

// NewSubspace creates a new instance of Subspace. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSubspace(t interface {
	mock.TestingT
	Cleanup(func())
},
) *Subspace {
	mock := &Subspace{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

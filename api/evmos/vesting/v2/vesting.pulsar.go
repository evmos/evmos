// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package vestingv2

import (
	fmt "fmt"
	io "io"
	reflect "reflect"
	sync "sync"

	_ "cosmossdk.io/api/amino"
	v1beta1 "cosmossdk.io/api/cosmos/vesting/v1beta1"

	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

var _ protoreflect.List = (*_ClawbackVestingAccount_4_list)(nil)

type _ClawbackVestingAccount_4_list struct {
	list *[]*v1beta1.Period
}

func (x *_ClawbackVestingAccount_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ClawbackVestingAccount_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ClawbackVestingAccount_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Period)
	(*x.list)[i] = concreteValue
}

func (x *_ClawbackVestingAccount_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Period)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ClawbackVestingAccount_4_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Period)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClawbackVestingAccount_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ClawbackVestingAccount_4_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Period)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClawbackVestingAccount_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ClawbackVestingAccount_5_list)(nil)

type _ClawbackVestingAccount_5_list struct {
	list *[]*v1beta1.Period
}

func (x *_ClawbackVestingAccount_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ClawbackVestingAccount_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ClawbackVestingAccount_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Period)
	(*x.list)[i] = concreteValue
}

func (x *_ClawbackVestingAccount_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Period)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ClawbackVestingAccount_5_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Period)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClawbackVestingAccount_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ClawbackVestingAccount_5_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Period)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClawbackVestingAccount_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ClawbackVestingAccount                      protoreflect.MessageDescriptor
	fd_ClawbackVestingAccount_base_vesting_account protoreflect.FieldDescriptor
	fd_ClawbackVestingAccount_funder_address       protoreflect.FieldDescriptor
	fd_ClawbackVestingAccount_start_time           protoreflect.FieldDescriptor
	fd_ClawbackVestingAccount_lockup_periods       protoreflect.FieldDescriptor
	fd_ClawbackVestingAccount_vesting_periods      protoreflect.FieldDescriptor
)

func init() {
	file_evmos_vesting_v2_vesting_proto_init()
	md_ClawbackVestingAccount = File_evmos_vesting_v2_vesting_proto.Messages().ByName("ClawbackVestingAccount")
	fd_ClawbackVestingAccount_base_vesting_account = md_ClawbackVestingAccount.Fields().ByName("base_vesting_account")
	fd_ClawbackVestingAccount_funder_address = md_ClawbackVestingAccount.Fields().ByName("funder_address")
	fd_ClawbackVestingAccount_start_time = md_ClawbackVestingAccount.Fields().ByName("start_time")
	fd_ClawbackVestingAccount_lockup_periods = md_ClawbackVestingAccount.Fields().ByName("lockup_periods")
	fd_ClawbackVestingAccount_vesting_periods = md_ClawbackVestingAccount.Fields().ByName("vesting_periods")
}

var _ protoreflect.Message = (*fastReflection_ClawbackVestingAccount)(nil)

type fastReflection_ClawbackVestingAccount ClawbackVestingAccount

func (x *ClawbackVestingAccount) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ClawbackVestingAccount)(x)
}

func (x *ClawbackVestingAccount) slowProtoReflect() protoreflect.Message {
	mi := &file_evmos_vesting_v2_vesting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var (
	_fastReflection_ClawbackVestingAccount_messageType fastReflection_ClawbackVestingAccount_messageType
	_                                                  protoreflect.MessageType = fastReflection_ClawbackVestingAccount_messageType{}
)

type fastReflection_ClawbackVestingAccount_messageType struct{}

func (x fastReflection_ClawbackVestingAccount_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ClawbackVestingAccount)(nil)
}

func (x fastReflection_ClawbackVestingAccount_messageType) New() protoreflect.Message {
	return new(fastReflection_ClawbackVestingAccount)
}

func (x fastReflection_ClawbackVestingAccount_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ClawbackVestingAccount
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ClawbackVestingAccount) Descriptor() protoreflect.MessageDescriptor {
	return md_ClawbackVestingAccount
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ClawbackVestingAccount) Type() protoreflect.MessageType {
	return _fastReflection_ClawbackVestingAccount_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ClawbackVestingAccount) New() protoreflect.Message {
	return new(fastReflection_ClawbackVestingAccount)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ClawbackVestingAccount) Interface() protoreflect.ProtoMessage {
	return (*ClawbackVestingAccount)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ClawbackVestingAccount) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BaseVestingAccount != nil {
		value := protoreflect.ValueOfMessage(x.BaseVestingAccount.ProtoReflect())
		if !f(fd_ClawbackVestingAccount_base_vesting_account, value) {
			return
		}
	}
	if x.FunderAddress != "" {
		value := protoreflect.ValueOfString(x.FunderAddress)
		if !f(fd_ClawbackVestingAccount_funder_address, value) {
			return
		}
	}
	if x.StartTime != nil {
		value := protoreflect.ValueOfMessage(x.StartTime.ProtoReflect())
		if !f(fd_ClawbackVestingAccount_start_time, value) {
			return
		}
	}
	if len(x.LockupPeriods) != 0 {
		value := protoreflect.ValueOfList(&_ClawbackVestingAccount_4_list{list: &x.LockupPeriods})
		if !f(fd_ClawbackVestingAccount_lockup_periods, value) {
			return
		}
	}
	if len(x.VestingPeriods) != 0 {
		value := protoreflect.ValueOfList(&_ClawbackVestingAccount_5_list{list: &x.VestingPeriods})
		if !f(fd_ClawbackVestingAccount_vesting_periods, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ClawbackVestingAccount) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackVestingAccount.base_vesting_account":
		return x.BaseVestingAccount != nil
	case "evmos.vesting.v2.ClawbackVestingAccount.funder_address":
		return x.FunderAddress != ""
	case "evmos.vesting.v2.ClawbackVestingAccount.start_time":
		return x.StartTime != nil
	case "evmos.vesting.v2.ClawbackVestingAccount.lockup_periods":
		return len(x.LockupPeriods) != 0
	case "evmos.vesting.v2.ClawbackVestingAccount.vesting_periods":
		return len(x.VestingPeriods) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackVestingAccount"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackVestingAccount does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClawbackVestingAccount) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackVestingAccount.base_vesting_account":
		x.BaseVestingAccount = nil
	case "evmos.vesting.v2.ClawbackVestingAccount.funder_address":
		x.FunderAddress = ""
	case "evmos.vesting.v2.ClawbackVestingAccount.start_time":
		x.StartTime = nil
	case "evmos.vesting.v2.ClawbackVestingAccount.lockup_periods":
		x.LockupPeriods = nil
	case "evmos.vesting.v2.ClawbackVestingAccount.vesting_periods":
		x.VestingPeriods = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackVestingAccount"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackVestingAccount does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ClawbackVestingAccount) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "evmos.vesting.v2.ClawbackVestingAccount.base_vesting_account":
		value := x.BaseVestingAccount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "evmos.vesting.v2.ClawbackVestingAccount.funder_address":
		value := x.FunderAddress
		return protoreflect.ValueOfString(value)
	case "evmos.vesting.v2.ClawbackVestingAccount.start_time":
		value := x.StartTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "evmos.vesting.v2.ClawbackVestingAccount.lockup_periods":
		if len(x.LockupPeriods) == 0 {
			return protoreflect.ValueOfList(&_ClawbackVestingAccount_4_list{})
		}
		listValue := &_ClawbackVestingAccount_4_list{list: &x.LockupPeriods}
		return protoreflect.ValueOfList(listValue)
	case "evmos.vesting.v2.ClawbackVestingAccount.vesting_periods":
		if len(x.VestingPeriods) == 0 {
			return protoreflect.ValueOfList(&_ClawbackVestingAccount_5_list{})
		}
		listValue := &_ClawbackVestingAccount_5_list{list: &x.VestingPeriods}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackVestingAccount"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackVestingAccount does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClawbackVestingAccount) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackVestingAccount.base_vesting_account":
		x.BaseVestingAccount = value.Message().Interface().(*v1beta1.BaseVestingAccount)
	case "evmos.vesting.v2.ClawbackVestingAccount.funder_address":
		x.FunderAddress = value.Interface().(string)
	case "evmos.vesting.v2.ClawbackVestingAccount.start_time":
		x.StartTime = value.Message().Interface().(*timestamppb.Timestamp)
	case "evmos.vesting.v2.ClawbackVestingAccount.lockup_periods":
		lv := value.List()
		clv := lv.(*_ClawbackVestingAccount_4_list)
		x.LockupPeriods = *clv.list
	case "evmos.vesting.v2.ClawbackVestingAccount.vesting_periods":
		lv := value.List()
		clv := lv.(*_ClawbackVestingAccount_5_list)
		x.VestingPeriods = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackVestingAccount"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackVestingAccount does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClawbackVestingAccount) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackVestingAccount.base_vesting_account":
		if x.BaseVestingAccount == nil {
			x.BaseVestingAccount = new(v1beta1.BaseVestingAccount)
		}
		return protoreflect.ValueOfMessage(x.BaseVestingAccount.ProtoReflect())
	case "evmos.vesting.v2.ClawbackVestingAccount.start_time":
		if x.StartTime == nil {
			x.StartTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.StartTime.ProtoReflect())
	case "evmos.vesting.v2.ClawbackVestingAccount.lockup_periods":
		if x.LockupPeriods == nil {
			x.LockupPeriods = []*v1beta1.Period{}
		}
		value := &_ClawbackVestingAccount_4_list{list: &x.LockupPeriods}
		return protoreflect.ValueOfList(value)
	case "evmos.vesting.v2.ClawbackVestingAccount.vesting_periods":
		if x.VestingPeriods == nil {
			x.VestingPeriods = []*v1beta1.Period{}
		}
		value := &_ClawbackVestingAccount_5_list{list: &x.VestingPeriods}
		return protoreflect.ValueOfList(value)
	case "evmos.vesting.v2.ClawbackVestingAccount.funder_address":
		panic(fmt.Errorf("field funder_address of message evmos.vesting.v2.ClawbackVestingAccount is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackVestingAccount"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackVestingAccount does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ClawbackVestingAccount) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackVestingAccount.base_vesting_account":
		m := new(v1beta1.BaseVestingAccount)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "evmos.vesting.v2.ClawbackVestingAccount.funder_address":
		return protoreflect.ValueOfString("")
	case "evmos.vesting.v2.ClawbackVestingAccount.start_time":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "evmos.vesting.v2.ClawbackVestingAccount.lockup_periods":
		list := []*v1beta1.Period{}
		return protoreflect.ValueOfList(&_ClawbackVestingAccount_4_list{list: &list})
	case "evmos.vesting.v2.ClawbackVestingAccount.vesting_periods":
		list := []*v1beta1.Period{}
		return protoreflect.ValueOfList(&_ClawbackVestingAccount_5_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackVestingAccount"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackVestingAccount does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ClawbackVestingAccount) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in evmos.vesting.v2.ClawbackVestingAccount", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ClawbackVestingAccount) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClawbackVestingAccount) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ClawbackVestingAccount) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ClawbackVestingAccount) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ClawbackVestingAccount)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BaseVestingAccount != nil {
			l = options.Size(x.BaseVestingAccount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FunderAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StartTime != nil {
			l = options.Size(x.StartTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.LockupPeriods) > 0 {
			for _, e := range x.LockupPeriods {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.VestingPeriods) > 0 {
			for _, e := range x.VestingPeriods {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ClawbackVestingAccount)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.VestingPeriods) > 0 {
			for iNdEx := len(x.VestingPeriods) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.VestingPeriods[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.LockupPeriods) > 0 {
			for iNdEx := len(x.LockupPeriods) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LockupPeriods[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.StartTime != nil {
			encoded, err := options.Marshal(x.StartTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.FunderAddress) > 0 {
			i -= len(x.FunderAddress)
			copy(dAtA[i:], x.FunderAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FunderAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.BaseVestingAccount != nil {
			encoded, err := options.Marshal(x.BaseVestingAccount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ClawbackVestingAccount)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClawbackVestingAccount: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClawbackVestingAccount: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseVestingAccount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BaseVestingAccount == nil {
					x.BaseVestingAccount = &v1beta1.BaseVestingAccount{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BaseVestingAccount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FunderAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FunderAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StartTime == nil {
					x.StartTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StartTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LockupPeriods", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LockupPeriods = append(x.LockupPeriods, &v1beta1.Period{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LockupPeriods[len(x.LockupPeriods)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestingPeriods", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VestingPeriods = append(x.VestingPeriods, &v1beta1.Period{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VestingPeriods[len(x.VestingPeriods)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ClawbackProposal                     protoreflect.MessageDescriptor
	fd_ClawbackProposal_title               protoreflect.FieldDescriptor
	fd_ClawbackProposal_description         protoreflect.FieldDescriptor
	fd_ClawbackProposal_address             protoreflect.FieldDescriptor
	fd_ClawbackProposal_destination_address protoreflect.FieldDescriptor
)

func init() {
	file_evmos_vesting_v2_vesting_proto_init()
	md_ClawbackProposal = File_evmos_vesting_v2_vesting_proto.Messages().ByName("ClawbackProposal")
	fd_ClawbackProposal_title = md_ClawbackProposal.Fields().ByName("title")
	fd_ClawbackProposal_description = md_ClawbackProposal.Fields().ByName("description")
	fd_ClawbackProposal_address = md_ClawbackProposal.Fields().ByName("address")
	fd_ClawbackProposal_destination_address = md_ClawbackProposal.Fields().ByName("destination_address")
}

var _ protoreflect.Message = (*fastReflection_ClawbackProposal)(nil)

type fastReflection_ClawbackProposal ClawbackProposal

func (x *ClawbackProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ClawbackProposal)(x)
}

func (x *ClawbackProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_evmos_vesting_v2_vesting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var (
	_fastReflection_ClawbackProposal_messageType fastReflection_ClawbackProposal_messageType
	_                                            protoreflect.MessageType = fastReflection_ClawbackProposal_messageType{}
)

type fastReflection_ClawbackProposal_messageType struct{}

func (x fastReflection_ClawbackProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ClawbackProposal)(nil)
}

func (x fastReflection_ClawbackProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_ClawbackProposal)
}

func (x fastReflection_ClawbackProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ClawbackProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ClawbackProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_ClawbackProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ClawbackProposal) Type() protoreflect.MessageType {
	return _fastReflection_ClawbackProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ClawbackProposal) New() protoreflect.Message {
	return new(fastReflection_ClawbackProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ClawbackProposal) Interface() protoreflect.ProtoMessage {
	return (*ClawbackProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ClawbackProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_ClawbackProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_ClawbackProposal_description, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_ClawbackProposal_address, value) {
			return
		}
	}
	if x.DestinationAddress != "" {
		value := protoreflect.ValueOfString(x.DestinationAddress)
		if !f(fd_ClawbackProposal_destination_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ClawbackProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackProposal.title":
		return x.Title != ""
	case "evmos.vesting.v2.ClawbackProposal.description":
		return x.Description != ""
	case "evmos.vesting.v2.ClawbackProposal.address":
		return x.Address != ""
	case "evmos.vesting.v2.ClawbackProposal.destination_address":
		return x.DestinationAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackProposal"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClawbackProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackProposal.title":
		x.Title = ""
	case "evmos.vesting.v2.ClawbackProposal.description":
		x.Description = ""
	case "evmos.vesting.v2.ClawbackProposal.address":
		x.Address = ""
	case "evmos.vesting.v2.ClawbackProposal.destination_address":
		x.DestinationAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackProposal"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ClawbackProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "evmos.vesting.v2.ClawbackProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "evmos.vesting.v2.ClawbackProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "evmos.vesting.v2.ClawbackProposal.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "evmos.vesting.v2.ClawbackProposal.destination_address":
		value := x.DestinationAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackProposal"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClawbackProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackProposal.title":
		x.Title = value.Interface().(string)
	case "evmos.vesting.v2.ClawbackProposal.description":
		x.Description = value.Interface().(string)
	case "evmos.vesting.v2.ClawbackProposal.address":
		x.Address = value.Interface().(string)
	case "evmos.vesting.v2.ClawbackProposal.destination_address":
		x.DestinationAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackProposal"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClawbackProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackProposal.title":
		panic(fmt.Errorf("field title of message evmos.vesting.v2.ClawbackProposal is not mutable"))
	case "evmos.vesting.v2.ClawbackProposal.description":
		panic(fmt.Errorf("field description of message evmos.vesting.v2.ClawbackProposal is not mutable"))
	case "evmos.vesting.v2.ClawbackProposal.address":
		panic(fmt.Errorf("field address of message evmos.vesting.v2.ClawbackProposal is not mutable"))
	case "evmos.vesting.v2.ClawbackProposal.destination_address":
		panic(fmt.Errorf("field destination_address of message evmos.vesting.v2.ClawbackProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackProposal"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ClawbackProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "evmos.vesting.v2.ClawbackProposal.title":
		return protoreflect.ValueOfString("")
	case "evmos.vesting.v2.ClawbackProposal.description":
		return protoreflect.ValueOfString("")
	case "evmos.vesting.v2.ClawbackProposal.address":
		return protoreflect.ValueOfString("")
	case "evmos.vesting.v2.ClawbackProposal.destination_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: evmos.vesting.v2.ClawbackProposal"))
		}
		panic(fmt.Errorf("message evmos.vesting.v2.ClawbackProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ClawbackProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in evmos.vesting.v2.ClawbackProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ClawbackProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClawbackProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ClawbackProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ClawbackProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ClawbackProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DestinationAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ClawbackProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.DestinationAddress) > 0 {
			i -= len(x.DestinationAddress)
			copy(dAtA[i:], x.DestinationAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DestinationAddress)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ClawbackProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClawbackProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClawbackProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DestinationAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DestinationAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Copyright Tharsis Labs Ltd.(Evmos)
// SPDX-License-Identifier:ENCL-1.0(https://github.com/evmos/evmos/blob/main/LICENSE)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: evmos/vesting/v2/vesting.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ClawbackVestingAccount implements the VestingAccount interface. It provides
// an account that can hold contributions subject to "lockup" (like a
// PeriodicVestingAccount), or vesting which is subject to clawback
// of unvested tokens, or a combination (tokens vest, but are still locked).
type ClawbackVestingAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// base_vesting_account implements the VestingAccount interface. It contains
	// all the necessary fields needed for any vesting account implementation
	BaseVestingAccount *v1beta1.BaseVestingAccount `protobuf:"bytes,1,opt,name=base_vesting_account,json=baseVestingAccount,proto3" json:"base_vesting_account,omitempty"`
	// funder_address specifies the account which can perform clawback
	FunderAddress string `protobuf:"bytes,2,opt,name=funder_address,json=funderAddress,proto3" json:"funder_address,omitempty"`
	// start_time defines the time at which the vesting period begins
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// lockup_periods defines the unlocking schedule relative to the start_time
	LockupPeriods []*v1beta1.Period `protobuf:"bytes,4,rep,name=lockup_periods,json=lockupPeriods,proto3" json:"lockup_periods,omitempty"`
	// vesting_periods defines the vesting schedule relative to the start_time
	VestingPeriods []*v1beta1.Period `protobuf:"bytes,5,rep,name=vesting_periods,json=vestingPeriods,proto3" json:"vesting_periods,omitempty"`
}

func (x *ClawbackVestingAccount) Reset() {
	*x = ClawbackVestingAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evmos_vesting_v2_vesting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClawbackVestingAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClawbackVestingAccount) ProtoMessage() {}

// Deprecated: Use ClawbackVestingAccount.ProtoReflect.Descriptor instead.
func (*ClawbackVestingAccount) Descriptor() ([]byte, []int) {
	return file_evmos_vesting_v2_vesting_proto_rawDescGZIP(), []int{0}
}

func (x *ClawbackVestingAccount) GetBaseVestingAccount() *v1beta1.BaseVestingAccount {
	if x != nil {
		return x.BaseVestingAccount
	}
	return nil
}

func (x *ClawbackVestingAccount) GetFunderAddress() string {
	if x != nil {
		return x.FunderAddress
	}
	return ""
}

func (x *ClawbackVestingAccount) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ClawbackVestingAccount) GetLockupPeriods() []*v1beta1.Period {
	if x != nil {
		return x.LockupPeriods
	}
	return nil
}

func (x *ClawbackVestingAccount) GetVestingPeriods() []*v1beta1.Period {
	if x != nil {
		return x.VestingPeriods
	}
	return nil
}

// ClawbackProposal is a gov Content type to clawback funds
// from a vesting account that has this functionality enabled.
type ClawbackProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// title of the proposal
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// description of the proposal
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// address is the vesting account address
	// to clawback the funds from
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// destination_address is the address that will receive
	// the clawbacked funds from the given vesting account. When
	// empty, proposal will return the coins to the vesting
	// account funder.
	DestinationAddress string `protobuf:"bytes,4,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
}

func (x *ClawbackProposal) Reset() {
	*x = ClawbackProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evmos_vesting_v2_vesting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClawbackProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClawbackProposal) ProtoMessage() {}

// Deprecated: Use ClawbackProposal.ProtoReflect.Descriptor instead.
func (*ClawbackProposal) Descriptor() ([]byte, []int) {
	return file_evmos_vesting_v2_vesting_proto_rawDescGZIP(), []int{1}
}

func (x *ClawbackProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ClawbackProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClawbackProposal) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ClawbackProposal) GetDestinationAddress() string {
	if x != nil {
		return x.DestinationAddress
	}
	return ""
}

var File_evmos_vesting_v2_vesting_proto protoreflect.FileDescriptor

var file_evmos_vesting_v2_vesting_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x65, 0x76, 0x6d, 0x6f, 0x73, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x32, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x65, 0x76, 0x6d, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x32, 0x1a, 0x24, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc7, 0x04, 0x0a, 0x16, 0x43, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x56,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x62, 0x0a,
	0x14, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x04, 0xd0, 0xde, 0x1f, 0x01, 0x52, 0x12, 0x62,
	0x61, 0x73, 0x65, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0d, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf,
	0x1f, 0x01, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x42, 0x46, 0xc8, 0xde, 0x1f,
	0x00, 0xaa, 0xdf, 0x1f, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x78, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0xa8, 0xe7,
	0xb0, 0x2a, 0x01, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x73, 0x12, 0x8f, 0x01, 0x0a, 0x0f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x42, 0x46, 0xc8, 0xde,
	0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x78, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0xa8,
	0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x73, 0x3a, 0x36, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00, 0x8a, 0xe7,
	0xb0, 0x2a, 0x29, 0x65, 0x76, 0x6d, 0x6f, 0x73, 0x2f, 0x78, 0x2f, 0x76, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x43, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x56, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9b, 0x01, 0x0a,
	0x10, 0x43, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x00, 0x42, 0xb3, 0x01, 0x0a, 0x14, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x6d, 0x6f, 0x73, 0x2e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x32, 0x42, 0x0c, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x6d, 0x6f, 0x73, 0x2f, 0x76, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x76, 0x32,
	0xa2, 0x02, 0x03, 0x45, 0x56, 0x58, 0xaa, 0x02, 0x10, 0x45, 0x76, 0x6d, 0x6f, 0x73, 0x2e, 0x56,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x10, 0x45, 0x76, 0x6d, 0x6f,
	0x73, 0x5c, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1c, 0x45,
	0x76, 0x6d, 0x6f, 0x73, 0x5c, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x32, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x45, 0x76,
	0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x32,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_evmos_vesting_v2_vesting_proto_rawDescOnce sync.Once
	file_evmos_vesting_v2_vesting_proto_rawDescData = file_evmos_vesting_v2_vesting_proto_rawDesc
)

func file_evmos_vesting_v2_vesting_proto_rawDescGZIP() []byte {
	file_evmos_vesting_v2_vesting_proto_rawDescOnce.Do(func() {
		file_evmos_vesting_v2_vesting_proto_rawDescData = protoimpl.X.CompressGZIP(file_evmos_vesting_v2_vesting_proto_rawDescData)
	})
	return file_evmos_vesting_v2_vesting_proto_rawDescData
}

var (
	file_evmos_vesting_v2_vesting_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
	file_evmos_vesting_v2_vesting_proto_goTypes  = []interface{}{
		(*ClawbackVestingAccount)(nil),     // 0: evmos.vesting.v2.ClawbackVestingAccount
		(*ClawbackProposal)(nil),           // 1: evmos.vesting.v2.ClawbackProposal
		(*v1beta1.BaseVestingAccount)(nil), // 2: cosmos.vesting.v1beta1.BaseVestingAccount
		(*timestamppb.Timestamp)(nil),      // 3: google.protobuf.Timestamp
		(*v1beta1.Period)(nil),             // 4: cosmos.vesting.v1beta1.Period
	}
)

var file_evmos_vesting_v2_vesting_proto_depIdxs = []int32{
	2, // 0: evmos.vesting.v2.ClawbackVestingAccount.base_vesting_account:type_name -> cosmos.vesting.v1beta1.BaseVestingAccount
	3, // 1: evmos.vesting.v2.ClawbackVestingAccount.start_time:type_name -> google.protobuf.Timestamp
	4, // 2: evmos.vesting.v2.ClawbackVestingAccount.lockup_periods:type_name -> cosmos.vesting.v1beta1.Period
	4, // 3: evmos.vesting.v2.ClawbackVestingAccount.vesting_periods:type_name -> cosmos.vesting.v1beta1.Period
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_evmos_vesting_v2_vesting_proto_init() }
func file_evmos_vesting_v2_vesting_proto_init() {
	if File_evmos_vesting_v2_vesting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_evmos_vesting_v2_vesting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClawbackVestingAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evmos_vesting_v2_vesting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClawbackProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_evmos_vesting_v2_vesting_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_evmos_vesting_v2_vesting_proto_goTypes,
		DependencyIndexes: file_evmos_vesting_v2_vesting_proto_depIdxs,
		MessageInfos:      file_evmos_vesting_v2_vesting_proto_msgTypes,
	}.Build()
	File_evmos_vesting_v2_vesting_proto = out.File
	file_evmos_vesting_v2_vesting_proto_rawDesc = nil
	file_evmos_vesting_v2_vesting_proto_goTypes = nil
	file_evmos_vesting_v2_vesting_proto_depIdxs = nil
}
